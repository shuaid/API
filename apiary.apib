FORMAT: 1A

# Company Directors API

## Introduction
With the Company Directors API, you can programmatically access various Company Directors' recources. 

## Current Version
The current version is listed below. Development on previous versions of the API will be limited to severe bug fixes only. 

| Version | Base URL | Status |
| ------ | ----------- | ------ |
| V1 | https://api.companydirectors.com.au/v1 | Current |

## Authentication
Company Directors API uses OAuth 2.0 Authorization. API calls are made on behalf of an authenticated user must include a token in the "Authorization" header. The token is aquired through Company Directors' Auth Server. 

```
Authorization: Bearer tokenString
```

For more information about authentication with Company Directors' Auth Server, see [Authenticate with Auth Server](https://developers.companydirectors.com.au/docs/authserver). 

## CORS
The API supports Cross Origin Resource Sharing (CORS) for AJAX requests from registered origin. 

Here's a sample request sent from a browser hitting `https://clientdomain.com`:

```
$ curl -i https://api.companydirectors.com.au/v1 -H "Origin: https://clientdomain.com"
HTTP/1.1 302 Found
Access-Control-Allow-Origin: *
Access-Control-Allow-Credentials: true
```

This is what the CORS preflight request looks like:

```
$ curl -i https://api.companydirectors.com.au/v1 -H "Origin: https://clientdomain.com" -X OPTIONS
HTTP/1.1 204 No Content
Access-Control-Allow-Origin: *
Access-Control-Allow-Headers: Authorization, Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since
Access-Control-Allow-Methods: GET, POST
Access-Control-Max-Age: 86400
Access-Control-Allow-Credentials: true
```

## Media Types
This API uses the JSON media-type to represent resources states.

Requests with a message-body are using plain JSON to set or update resource states.

## Response Codes
The REST API responds to requests with standard HTTP status codes. Error messages are embedded in the JSON response in the event of a validation failure or when the API fails to process your request.

### Errors
The common HTTP Response Status Codes are used.

| Status Code | Description |
| ------ | ----------- |
| 401 Unauthorized | Authentication credentials were missing or incorrect.  |
| 403 Forbidden | The request has been refused or access is not allowed. |
| 404 Not Found | The resource you specified was not found. |
| 406 Not Acceptable | The format you requested is not available. |
| 500 Internal Server Error | A server error occurred. |

## Pagination
Requests that return multiple items will be paginated to 30 items by default. You can specify further pages with the `?page` parameter. 

```
$curl 'https://api.companydirectors.com.au/events/search?term=Directors+Briefing&page=2'
```

Note that page numbering is 1-based and that omitting the `?page` parameter will return the first page.

# Group Event

## Events [/events{?from}{?to}]
A list of events

+ Model (application/json)

    + Body
    
        ```
    [
        {
            "id": "EV111864",
            "displayName": "ipsum ea sit aliqua irure pariatur est ea",
            "dpd": 10,
            "quadrantName": "Organisational",
            "division": "VIC",
            "isMultisession": true
        }
    ]
        ```
        
### /events{?from}{?to} [GET]
Get events by dates.

+ Parameters
    + from (optional, date, `2015-10-01`) ... Only Events from this date are returned, defaults to now.
    + to (optional, date, `2015-10-31`) ... Only Events to this date are returned, defaults to one month from now.
    
+ Response 200

    [Events][]
    
## Search Events [/events/registered{?term}]

### /events/search{?term} [GET]
Search upcoming events by event name.

+ Parameters
    + term (required, string, `Directors+Briefing`) ... Search term (e.g. "Directors Briefing"). Make sure to URL encode the search term before making the request.
    
+ Response 200

    [Events][]

## Registered Events [/events/registered{?status}]
A list of registered events of the current authenticated user

+ Authentication required

### /events/registered{?status} [GET]


+ Parameters
    + status (required, string, `open`) ... One of: **open**, **closed**. Specifying `open` will get registered upcoming events. Specifying `closed` will get registered past events.

+ Request

    + Headers

            Authorization: Bearer tokenString
    
+ Response 200

    [Events][]

## Event [/events/{eventId}]
A single event

+ Parameters
    + eventId (required, string, `EV169971`) ... ID of an Event 

+ Model (application/json)

    + Body
    
        ```
        {
            "id": "EV169971",
            "displayName": "mollit enim velit dolore proident non excepteur proident",
            "description": "Consequat voluptate proident.\r\nIpsumu atm aute occaecat laboris.\r\n",
            "beginDateTime": "2015-10-13T23:41:24+00:00",
            "endDateTime": "2015-10-13T23:41:24+00:00",
            "arrivalDateTime": "2015-10-13T23:41:24+00:00",
            "timeZone": "(GMT+09:30) Adelaide",
            "dpd": 16,
            "quadrantName": "Individual",
            "division": "National",
            "venueName": "enim mollit labore incididunt et eiusmod",
            "address": {
                "address1": "691 Jefferson Avenue",
                "address2": "elit officia dolore amet incididunt tempor",
                "suburb": "Fresno",
                "state": "VIC",
                "postcode": "2045",
                "country": "Australia",
                "latitude": -22.427564,
                "longitude": 51.87248
            },
            "isMultisession": true
        }
        ```
        
### /events/{eventId} [GET]
Get an event by event ID.

+ Response 200

    [Event][]
   
## Sessions [/events/{eventId}/sessions]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "EV100489",
                "displayName": "occaecat labore est ex ad fugiat nulla fugiat",
                "beginDateTime": "2015-10-14T01:39:23+00:00",
                "endDateTime": "2015-10-14T01:39:23+00:00"
            }
        ]
        ```

### /events/{eventId}/sessions [GET]
Get a list of sessions for an event.

+ Response 200

    [Sessions][]

## Session [/sessions/{sessionId}]

+ Parameters
    + sessionId (required, string, `EV121339`) ... ID of a session 

+ Model (application/json)

    + Body
    
        ```
        {
            "id": "EV121339",
            "displayName": "nulla et consequat eiusmod nisi aute nostrud consectetur",
            "description": "Culpa qui non elit.\r\nOfficia sit tempor eu aliqua amet. Reprehenderit enim occaecat in.\r\n",
            "beginDateTime": "2015-10-14T01:35:57+00:00",
            "endDateTime": "2015-10-14T01:35:57+00:00"
        }
        ```

### /sessions/{sessionId} [GET]
Get a session by session ID.

+ Response 200

    [Session][]

## Speakers [/events/{eventId}/speakers]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "1623965",
                "name": "Larsen Garrison FAICD",
                "photoUrl": "https://media.companydirectors.com.au/photos/vu9kq9i19k9.jpg"
            }
        ]
        ```

### /events/{eventId}/speakers [GET]
Get speakers of an event.

+ Response 200

    [Speakers][]

## Speaker [/speakers/{speakerId}]

+ Model (application/json)

    + Body
    
        ```
        {
            "id": "1304625",
            "name": "Consuelo Malone MAICD",
            "bio": "Culpa voluptate veniam .\r\nExercitation ullamco qui.\r\n",
            "photoUrl": "https://media.companydirectors.com.au/photos/mdah478pvi.jpg"
        }
        ```

### /speakers/{speakerId} [GET]

+ Response 200

    [Speaker][]

## Attendees [/events/{eventId}/attendees]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "1097543",
                "firstName": "Bettie",
                "lastName": "Davenport",
                "salutation": "Dr",
                "postNominal": "FAICD"
            }
        ]
        ```

### /events/{eventId}/attendees [GET]
List all public attendees.

+ Response 200

    [Attendees][]

## Attendee [/attendees/{attendeeId}]

+ Parameters
    + attendeeId (required, string, `1453064`) ... ID of an attendee. 

+ Model (application/json)

    + Body
    
        ```
        {
            "id": "1453064",
            "firstName": "Martinez",
            "lastName": "Mason",
            "salutation": "Dr",
            "postNominal": "FAICD",
            "jobTitle": "adipisicing tempor",
            "organisation": "nulla elit veniam Lorem",
            "bio": "Laborum fugiat laborum aliquip amet labore.\r\nLorem Lorem incididunt ex et cillum.\r\n",
            "photoUrl": "https://media.companydirectors.com.au/photos/2b0ejfnipb9.jpg",
            "linkedInUrl": "http://www.linkedin.com/in/nflepfd2t9",
            "twitterUrl": "http://www.twitter.com/zw8aw1p2e29",
            "facebookUrl": "http://www.facebook.com/juugwszia4i"
        }
        ```

### /attendees/{attendeeId} [GET]

+ Response 200

    [Attendee][]

## Sponsors [/events/{eventId}/sponsors]

+ Model (application/json)

    + Body
    
        ```
        [
            {
            "id": "500047",
            "name": "KPMG",
            "logoUrl": "https://media.companydirectors.com.au/photos/e9hrdym0a4i.gif",
            "websiteUrl": "http://www.kpmg.com.au"
            }
        ]
        ```

### /events/{eventId}/sponsors [GET]

+ Response 200

    [Sponsors][]

## Administrators [/events/{eventId}/administrators]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "ba8414da-4439-4ed1-8bda-5caf0b759f9e",
                "firstName": "Barrett",
                "lastName": "Chaney",
                "phone": "61 2 6583 3505",
                "email": "barrettchaney@zilphur.com"
            
            }
        ]
        ```

### /events/{eventId}/administrators [GET]

+ Response 200 

    [Administrators][]

## Accommodation [/events/{eventId}/accommodation]

+ Model (application/json)

    + Body
    
        ```
        {
            "id": "fdc89a93-cb04-4f4b-9cc9-8d126286cb5c",
            "hotelName": "Mandarin Oriental",
            "hotelAddress": {
                "address1": "691 Jefferson Avenue",
                "address2": "Elit officia dolore amet incididunt tempor",
                "suburb": "Fresno",
                "state": "VIC",
                "postcode": 2045,
                "country": "Australia"
            },
            "roomName": "Deluxe Park View Room",
            "roomType": "Single",
            "checkinDateTime": "2015-10-14T00:03:48+00:00",
            "checkoutDateTime": "2015-10-16T00:03:48+00:00"
        }
        ```

### /events/{eventId}/accommodation [GET]

+ Response 200 

    [Accommodation][]

## Transportation [/events/{eveintId}/transportation]

+ Model (application/json)

    + Body
    
        ```
        {
            "id": "96c7c260-9403-4913-970d-a0994cf813f8",
            "description": "Pariatur ipsum aute sit eu ad.\r\nCommodo id laboris pariatur velit.\r\n"
        }
        ```  

### /events/{eveintId}/transportation [GET]

+ Response 200 

    [Transportation][]

## Notes [/events/{eventId}/note]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "ffa0bd65-15ed-4280-bec1-ce401dd85dae",
                "content": "Ea ea laborum irure et pariatur.\r\nMagna occaecat qui nostrud commodo magna nulla.\r\n",
                "createdDateTme": "2014-10-14T00:03:48+00:00",
                "updatedDateTime": "2014-10-16T00:03:48+00:00"
            }
        ]
        ```  

### /events/{eventId}/notes [GET]

+ Response 200 

    [Notes][]

## Polls [/events/{eventId}/polls]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "ffa0bd65-15ed-4280-bec1-ce401dd85dae",
                "pollUrl": "https://polls.companydirectors.com.au/5ad734909f"
            }
        ]
        ```  

### /events/{eventId}/polls [GET]

+ Response 200 

    [Polls][]

## Surveys [/events/{eventId}/surveys]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "ffa0bd65-15ed-4280-bec1-ce401dd85dae",
                "surveyUrl": "https://surveys.companydirectors.com.au/5ad734909f"
            }
        ]
        ```  

### /events/{eventId}/surveys [GET]

+ Response 200 

    [Surveys][]

## Feeds [/events/{eventId}/feeds]
The feeds of posts (including status updates) published by event administrators.

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "3507845453",
                "feedUrl": "https://feeds.companydirectors.com.au/5ad734909f"
            }
        ]
        ```  

### /events/{eventId}/feeds [GET]

+ Response 200 

    [Feeds][]

## Hashtags [/events/{eventId}/hashtags]

+ Model (application/json)

    + Body
    
        ```
        [
            {
                "id": "66987874925",
                "name": "Conference2015"
            }
        ]
        ```

### /events/{eventId}/hashtags [GET]

+ Response 200 

    [Hashtags][]
    
